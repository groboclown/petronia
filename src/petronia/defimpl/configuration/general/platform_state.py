
"""
State generated by the platform to configure the configuration.
"""

from typing import Sequence, Iterable
from ....aid.simp import (
    EventBus,
)
from ....aid.bootstrap import (
    create_singleton_identity,
)
from ....core.state.api import (
    set_state,
)

STATE_ID_PLATFORM_EXTENSION_CONFIGURATION_STATE = create_singleton_identity(
    'default.configuration/platform-state'
)


class PlatformExtensionConfigurationState:
    """
    Stores the paths to the configuration that this extension will
    scan.  Generated by the platform extension, based on what it discovered
    from user configuration and standard platform paths.
    """
    __slots__ = ('__paths',)

    def __init__(self, ordered_search_path: Iterable[str]) -> None:
        self.__paths = tuple(ordered_search_path)

    @property
    def ordered_search_path(self) -> Sequence[str]:
        """
        Ordered directories to scan for configuration files.
        """
        return self.__paths


def set_platform_extension_configuration_state(
        bus: EventBus,
        ordered_search_path: Iterable[str]
) -> None:
    set_state(
        bus, STATE_ID_PLATFORM_EXTENSION_CONFIGURATION_STATE,
        PlatformExtensionConfigurationState,
        PlatformExtensionConfigurationState(ordered_search_path)
    )
