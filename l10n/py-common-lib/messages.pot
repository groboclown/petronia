# Translations template for PROJECT.
# Copyright (C) 2020 Petronia
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2020-07-07 02:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: projects/py-common-lib/petronia_common/event_stream/reader.py:141
msgid "Reached end-of-stream before packet start"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:179
#: projects/py-common-lib/petronia_common/event_stream/reader.py:190
#: projects/py-common-lib/petronia_common/event_stream/reader.py:338
msgid "Reached end-of-stream during packet read"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:204
#: projects/py-common-lib/petronia_common/event_stream/reader.py:251
#: projects/py-common-lib/petronia_common/event_stream/reader.py:297
#: projects/py-common-lib/petronia_common/event_stream/reader.py:460
msgid "Unexpected data in the event stream"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:212
#: projects/py-common-lib/petronia_common/event_stream/reader.py:220
msgid "event-id must have a length in the range [{n}, {x}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:237
msgid "event-id included invalid UTF-8 encoding"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:258
#: projects/py-common-lib/petronia_common/event_stream/reader.py:266
msgid "source-id must have a length in the range [{n}, {x}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:283
msgid "source-id included invalid UTF-8 encoding"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:304
#: projects/py-common-lib/petronia_common/event_stream/reader.py:312
msgid "target-id must have a length in the range [{n}, {x}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:329
msgid "target-id included invalid UTF-8 encoding"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:352
#: projects/py-common-lib/petronia_common/event_stream/reader.py:364
msgid "json data must have a length in the range [{n}, {x}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:382
msgid "Event streaming data included incorrectly encoded UTF-8 values: {e}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:388
msgid "Event streaming data included badly formatted JSON data: {e}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:392
msgid "Event data was not sent as JSON dictionary"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/reader.py:431
msgid "binary blob data must have a length in the range [{n}, {x}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:43
msgid "binary_blob has {real_size} bytes, but requested {expected_size}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:51
#: projects/py-common-lib/petronia_common/event_stream/writer.py:181
msgid "event-id UTF-8 encoding problem: {exception}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:58
#: projects/py-common-lib/petronia_common/event_stream/writer.py:188
msgid "source-id UTF-8 encoding problem: {exception}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:65
#: projects/py-common-lib/petronia_common/event_stream/writer.py:195
msgid "target-id UTF-8 encoding problem: {exception}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:72
#: projects/py-common-lib/petronia_common/event_stream/writer.py:202
msgid "event-id length must be within [{id_min}, {id_max}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:76
#: projects/py-common-lib/petronia_common/event_stream/writer.py:206
msgid "source-id length must be within [{id_min}, {id_max}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:80
#: projects/py-common-lib/petronia_common/event_stream/writer.py:210
msgid "target-id length must be within [{id_min}, {id_max}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:84
msgid "binary event data size must be within [{b_min}, {b_max}]"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:132
msgid "binary blob data less than requested size"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:170
msgid "event object data UTF-8 encoding problem: {exception}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:174
msgid "event object data cannot be marshalled: {exception}"
msgstr ""

#: projects/py-common-lib/petronia_common/event_stream/writer.py:214
msgid "event object data size must be within [{b_min}, {b_max}]"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:23
msgid "references must be a dictionary of event data type dictionaries"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:37
msgid "event schemas must be dictionaries"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:74
msgid "`{priority}` must be a valid priority"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:80
msgid "`{send_access}` must be a valid access"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:86
msgid "`{receive_access}` must be a valid access"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:175
msgid "cyclic reference `{reference}`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:181
msgid "unknown reference `{reference}`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:187
msgid "reference depth too deep ({depth})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:225
msgid "unknown data type `{data_type}`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:301
#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:307
msgid "enum values must be a list of strings"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:338
msgid "`value-type` must be a dictionary of a data type structure"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:361
msgid "`fields` must be a dictionary of field data type structures"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:370
msgid "`optional` must be `true` or `false`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:393
#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:399
msgid "`type-mapping` must be a dictionary of data type structures"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:435
msgid "no `{key}` found in definition"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:440
#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:453
msgid "`{key}` must be a string value"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:469
#: projects/py-common-lib/petronia_common/extension/config/event_loader.py:482
msgid "`{key}` must be a number"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:120
#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:474
msgid ""
"min_length ({min_length}) must be equal to or less than max_length "
"({max_length})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:129
msgid ""
"min_length ({min_length}) must be greater than or equal to "
"{MIN_STRING_LENGTH}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:135
msgid ""
"max_length ({max_length}) must be less than or equal to "
"{MAX_STRING_LENGTH}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:191
#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:257
msgid ""
"min_value ({min_value}) must be equal to or less than max_value "
"({max_value})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:197
msgid "min_value ({min_value}) must be greater than or equal to {MIN_INT_VALUE}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:203
msgid "max_value ({max_value}) must be less than or equal to {MAX_INT_VALUE}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:302
msgid "value list must contain at least 1 item"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:307
msgid "enum value {value} must be a string"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:313
msgid ""
"enum value \"{value}\" must have at least {MIN_ENUM_VALUE_LENGTH} "
"characters"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:322
msgid ""
"enum value \"{value}\" must have no more than {MAX_ENUM_VALUE_LENGTH} "
"characters"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:363
msgid "invalid formatted date string ({date})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:417
msgid "`reference` type not replaced"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:483
msgid ""
"min_length ({min_length}) must be greater than or equal to "
"{MIN_ARRAY_LENGTH}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:489
msgid "max_length ({max_length}) must be less than or equal to {MAX_ARRAY_LENGTH}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:583
msgid ""
"field name ({field_name}) must have {MIN_FIELD_NAME_LENGTH} to "
"{MAX_FIELD_NAME_LENGTH} characters"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:593
#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:600
msgid "field name ({field_name}) must match `[a-z][a-z0-9_]*`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:685
msgid ""
"must have {MIN_TYPE_MAPPING_VALUES} to {MAX_TYPE_MAPPING_VALUES} "
"selectors ({count})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:696
msgid "selector ({selector}) must have {n} to {x} characters"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/event_schema.py:774
msgid "event name ({event_name}) must conform to the pattern `[a-z0-9][a-z0-9-]*`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:27
msgid "invalid extension type ({extension_type})"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:141
#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:148
msgid "`{key}` must be a list of strings"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:165
msgid "version ({version}) must be in the format [major, minor, patch]"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:170
msgid "version {{version}} must contain only non-negative integers"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:185
msgid "`{key}` must be a list of dictionaries"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:202
msgid ""
"dependency must be a dictionary containing the keys `name`, `minimum`, "
"and possibly `below`"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:234
msgid "`events` must be a dictionary of event schemas"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_loader.py:239
msgid "`references` must be a dictionary of event data type schemas"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_schema.py:190
msgid "duplicate event name: {name}"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_schema.py:276
msgid "extension name ({name}) must conform to the pattern [a-z0-9][a-z0-9._]"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_schema.py:281
msgid ""
"extension name ({name}) must be {MIN_EXTENSION_NAME_LENGTH} to "
"{MAX_EXTENSION_NAME_LENGTH} long"
msgstr ""

#: projects/py-common-lib/petronia_common/extension/config/extension_schema.py:299
msgid "duplicate dependency: {name}"
msgstr ""

#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:37
#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:44
#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:83
#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:99
msgid "{src}: validation error: "
msgstr ""

#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:51
#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:89
#: projects/py-common-lib/petronia_common/util/validation/enforcement.py:105
msgid "{src}: validation error ({e}): "
msgstr ""

#: projects/py-common-lib/petronia_common/util/yaml_support/load_it.py:23
msgid "Invalid YAML format: {e}"
msgstr ""

#: projects/py-common-lib/petronia_common/util/yaml_support/load_it.py:30
msgid "Could not transform documents to YAML: {e}"
msgstr ""

