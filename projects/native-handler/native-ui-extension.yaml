---
schema-version: v1

name: petronia.core.api.native.ui
version: [1, 0, 0]
type: api

about: The Native UI event details.
description: >
  A sub-event for native UI handling.  This handles translation services and
  UI component interactivity.  Translations are rolled into this bundle because
  they are used by the text rendering portions.

  The UI elements constructed in this extension are the lowest and simplest.
licenses:
  - MIT
authors:
  - Petronia Project
depends: []
default:
  name: petronia.core.impl.native
  minimum: [1, 0, 0]


state-data:

events:

  # =========================================================================
  # Low-Level UI Component Actions

  register-image-details:
    description: >
      Register an image for display.  This must be followed up with a
      register-image-bytes event.  The source ID is the image registration
      ID.
    priority: io
    send-access: public
    receive-access: implementations
    fields:
      locale:
        type: reference
        ref: locale-code
      format:
        description: The mime format of the image.
        type: string
        min-length: 1
        max-length: 100

  # =========================================================================
  # User Events on the Drawn Components

  ui-panel-clicked:
    description: >
      A UI panel was clicked on.
    priority: user
    send-access: implementations
    receive-access: public
    fields:
      identifier:
        type: reference
        ref: response-identifier
      mouse_buttons:
        description: List of mouse button index that was pressed.  Can also mean a key activation.
        type: array
        min-length: 1
        max-length: 100
        value-type:
          type: int

  ui-text-field-update:
    description: >
      Text inside a text field UI element changed.
    priority: user
    send-access: implementations
    receive-access: public
    fields:
      identifier:
        type: reference
        ref: response-identifier
      text:
        type: string
        min-length: 0
        max-length: 1000


references:
  # =========================================================================
  # Standard Types
  response-identifier:
    description: >
      An identifier, created by the sender, that is included in the response so the sender matches the
      response to the sent message.  Combined with the sender's ID (for requests) or target's ID
      (for responses) creates a unique identifier.
    type: int
    min-value: -999999
    max-value: 9999999
  event-target-id:
    description: ID of an event listener.
    type: string
    min-length: 5
    max-length: 600

  # =========================================================================
  # Custom Types

  locale-code:
    description: standard language and locale identifier.
    type: string
    min-length: 1
    max-length: 10

  catalog-name:
    description: name of the catalog registered.
    type: string
    min-length: 3
    max-length: 255


  # =========================================================================
  # Drawn and Interactive UI Elements

  color:
    description: >
      A color on the screen.  This is a hex code in the format RRGGBBAA.
    type: string
    min-length: 8
    max-length: 8

  ui-text:
    description: >
      Text to show to the user.  The text will be fitted to match the boundaries
      of the owning panel, and use the text properties of the owning panel.
    type: structure
    fields:
      text:
        description: The text message, which will be translated
        type: string
        min-length: 0
        max-length: 65535
      catalog:
        type: reference
        ref: catalog-name


  ui-image:
    description:
      A reference to a UI image, which must have been already loaded.
    type: structure
    fields:
      image_ref:
        description: The reference to the already loaded image.
        type: reference
        ref: event-target-id
      layout:
        description: How to handle the display of the image.
        type: enum
        values:
          - crop
          - scale

  text-setting:
    description: >
      Describes the text display formatting.  This is used by the UI elements
      to create relative sizes.
    type: structure
    fields:
      font_name:
        type: string
        optional: true
      font_size:
        type: int
        min-value: 1
        optional: true
      italics:
        type: bool
        optional: true
      weight:
        type: float
        min-value: 0.0
        optional: true
      underline:
        type: int
        min-value: 0
        optional: true
      color:
        type: reference
        ref: color
      orientation:
        description: >
          The text orientation, in degrees.  0 means normal direction (which is locale specific,
          due to BiDi text requirements), 90 means rotated clockwise a quarter turn, 180 means
          upside-down, and 270 means rotated counter-clockwise a quarter turn.  Some UIs may
          allow other values, but for compatibility reasons, code should be limited to these 4
          values.
        type: int
        min-value: 0
        max-value: 359

  ui-text-field:
    description: >
      A text field to allow the user to enter text.  Changes to the text
      will be sent as events.
    type: structure
    fields:
      max_length:
        type: int
        min-value: 0
      initial_value:
        type: string
        optional: true

  ui-boundary:
    description: >
      A boundary space that contains at most 1 other component.
    type: structure
    fields:
      identifier:
        type: reference
        ref: response-identifier
      clickable:
        description: >
          Set to True to allow click events to be fired on this element.  This includes
          mouse motion while a click is pressed (for drag actions).
        type: bool
      color:
        type: reference
        ref: color
      outline_color:
        type: reference
        ref: color
      corner_rounding:
        description: >
          The amount to round the corner, in "em" values.  Percentage doesn't make much sense
          from a UI perspective, so this just uses "em" values.
        type: float
        min-value: 0.0
      outline_width:
        description: >
          The width of the outline color, in "em" values.
        type: float
        min-value: 0.0
        max-value: 4.0
      text_setup:
        description: >
          The text description that defines the relative sizing of the internal component.
          If not set, then this inherits from its parent.
        optional: true
        type: reference
        ref: text-setting
      child:
        description: >
          The contained UI element.
        optional: true
        type: selector
        type-mapping:
          panel:
            type: reference
            ref: ui-panel
          text:
            type: reference
            ref: ui-text
          image:
            type: reference
            ref: ui-image
          boundary:
            type: reference
            ref: ui-boundary

  ui-panel:
    description: >
      An internal UI component that contains other panels or boundaries.  It must be
      contained within a boundary.
    type: structure
    fields:
      identifier:
        type: reference
        ref: response-identifier
      children:
        type: array
        optional: true
        min-length: 0
        max-length: 1000
        value-type:
          type: structure
          fields:
            element:
              type: selector
              type-mapping:
                panel:
                  type: reference
                  ref: ui-panel
                boundary:
                  type: reference
                  ref: ui-boundary
            north:
              description: >
                Relative position of the "north" edge of this contained element against the
                parent panel.
              type: reference
              ref: position
            south:
              description: >
                Relative position of the "south" edge of this contained element against the
                parent panel.
              type: reference
              ref: position
            east:
              description: >
                Relative position of the "east" edge of this contained element against the
                parent panel.
              type: reference
              ref: position
            west:
              description: >
                Relative position of the "west" edge of this contained element against the
                parent panel.
              type: reference
              ref: position

  position:
    description: >
      A relative position, as either a percentage or a "em" distance, which is a font-relative
      distance.  Negative values refer to relative distance from the opposite bounding side.
    type: selector
    type-mapping:
      em:
        type: float
      per:
        type: float
