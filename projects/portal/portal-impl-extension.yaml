---

name: petronia_portal
type: impl
version: [1, 0, 0]
about: Implementation of the portal API
description: >
  Default Petronia implementation of the portal API.
  The implementation includes hotkey event listening.
licenses:
  - MIT
authors:
  - Petronia Project

runtime:
  launcher: core

implements:
  - name: petronia.core.api.portal
    minimum: [1, 0, 0]
    below: [2, 0, 0]

depends:
  - name: petronia.core.api.datastore
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.protocol.logging
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.api.hotkey_binding
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.api.native.screen
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.api.native.window
    minimum: [1, 0, 0]
    below: [2, 0, 0]

state-data:

  configuration:
    description: >
      Configuration for the portals.
    fields:
      workspaces:
        description: >
          List of monitor/layout configurations to choose from.
        type: array
        min-length: 1
        max-length: 1000
        value-type:
          type: reference
          ref: workspace-setup
      default_window_behavior:
        description: >
          List of window portal behavior.
        type: array
        min-length: 0
        max-length: 10000
        value-type:
          type: reference
          ref: window-match



references:
  # ------------------------------
  # Standard Types ...
  event-target-id:
    description: ID of an event listener.
    type: string
    min-length: 5
    max-length: 600

  # ------------------------------
  # Custom Types ...

  window-size-fit:
    description: >
      How to change the size of the window within the portal.
      "shrink" means that, if the window is larger than the portal, shrink it to be at
      most the size of the portal, but leave it alone if it is smaller than the portal.
      "stretch" means that, if the window is smaller than the portal, expand it to be the
      same size as the portal, but if it's larger, leave it alone.
      "fit" means change the size of the window to match the portal.
      "none" means no change.
    type: enum
    values:
      - shrink
      - stretch
      - fit
      - none

  window-portal-fit:
    description: >
      How to size the window within the portal.  The window can be stretched to fit each edge,
      or resized to be at most the edge length, and aligned at different places along the edges.
    type: structure
    fields:
      justify_horizontal:
        description: >
          How to choose the base position for placing the window, along the horizontal axis.
        type: enum
        values:
          - left
          - center
          - right
      justify_vertical:
        description: >
          How to choose the base position for placing the window, along the vertical axis.
        type: enum
        values:
          - top
          - center
          - bottom
      fit_horizontal:
        description: >
          How to fit the window within the horizontal spacing of the portal.
        type: reference
        ref: window-size-fit
      fit_vertical:
        description: >
          How to fit the window within the vertical spacing of the portal.
        type: reference
        ref: window-size-fit

  window-match:
    description: >
      Matches a window description to a default assigned portal and fit.
    type: structure
    fields:
      match:
        description: Items that all must match to have the definition apply to the window.
        type: array
        min-length: 1
        max-length: 100
        value-type:
          type: reference
          ref: window-match-item
      managed:
        description: >
          If false, the window floats according to layered window managing, and the
          `fit` and `initial_portal` fields are ignored.
          If true, the window is managed within the portals.
          If not given, this defaults to true.
        optional: true
        type: bool
      fit:
        description: How to fit the window inside the portal.
        optional: true
        type: reference
        ref: window-portal-fit
      initial_portal:
        description: Initial portal alias into which to place the portal.
        optional: true
        type: string
        min-length: 1
        max-length: 100

  window-match-item:
    description: A single meta-data matcher for a window.
    type: structure
    fields:
      key:
        type: string
        min-length: 1
        max-length: 1000
      match_type:
        type: enum
        values:
          - regex
          - exact
          - glob
          - exists
          - not-exists
      value:
        type: string
        min-length: 0
        max-length: 1000

  portal:
    description: >
      A "leaf" within the layout arrangement.
    type: structure
    fields:
      # window_ids:
      #   description: List of window target IDs assigned to this portal.
      #   type: array
      #   value-type:
      #     type: reference
      #     ref: event-target-id
      size:
        description: >
          Relative size for this portal.  If all the portal sizes within the parent split add up
          to 5, and this one is 2, then this portal takes up 2/5 of the owned split size.
          A value of 0 means it takes up the space from its relative start to the end of the
          owning split, and the next portal starts at the same starting position.
        type: int
      preferred_location:
        description: >
          The preferred placing for contained windows.  Windows, by default, are stretched to
          fill the portal.  However, if a contained window is set to not stretch, then this
          value defines its relative placement within the portal.
        type: reference
        ref: window-portal-fit
      padding_top:
        description: >
          Extra virtual screen pixel space to add at the top of the portal.
          Padding is extra space between the edge of the portal and the contained windows.
        type: int
        min-value: 0
        max-value: 10000
      padding_bottom:
        description: >
          Extra virtual screen pixel space to add at the bottom of the portal.
          Padding is extra space between the edge of the portal and the contained windows.
        type: int
        min-value: 0
        max-value: 10000
      padding_left:
        description: >
          Extra virtual screen pixel space to add at the left of the portal.
          Padding is extra space between the edge of the portal and the contained windows.
        type: int
        min-value: 0
        max-value: 10000
      padding_right:
        description: >
          Extra virtual screen pixel space to add at the right of the portal.
          Padding is extra space between the edge of the portal and the contained windows.
        type: int
        min-value: 0
        max-value: 10000
      portal_aliases:
        description: List of aliases for this portal; used for "target".
        type: array
        min-length: 1
        max-length: 100
        value-type:
          type: string
          min-length: 1
          max-length: 100

  layout-split:
    description: >
      A divider for the layout.  A split contains 1 or more other splits or portals.  Each layered
      split alternates the split direction.
    type: structure
    fields:
      size:
        description: >
          Relative size for this split.  If all the portal and split sizes within the parent split
          add up to 5, and this one is 2, then this portal takes up 2/5 of the owned split size.
        type: int
      direction:
        description: >
          The direction of the split.  Each split should have the opposite direction of its parent.
        type: enum
        values:
          - horizontal
          - vertical
      contents:
        description: >
          The contents of the split.
        type: array
        value-type:
          type: reference
          ref: split-content

  split-content:
    description: >
      The contents of a cell within a layout split.
    type: selector
    type-mapping:
      split:
        type: reference
        ref: layout-split
      portal:
        type: reference
        ref: portal

  screen-block:
    description:
      A virtual screen area to match.
    type: structure
    fields:
      x:
        description: upper-left X position for the block, in virtual screen space.
        type: int
      y:
        description: upper-left Y position for the block, in virtual screen space.
        type: int
      width:
        description: width of the block, in virtual screen space.
        type: int
      height:
        description: width of the block, in virtual screen space.
        type: int

  screen-matcher:
    description: >
      A rough description of the virtual screen space, and the associated layout.
    type: structure
    fields:
      block:
        type: reference
        ref: screen-block
      layout:
        type: reference
        ref: layout-split

  workspace-setup:
    description: >
      A layout with an optional screen size it associates with.  The workspace that does not
      have a screen matcher is considered the "default" workspace.

    # This is a structure, because currently we can't generate arrays of arrays.
    type: structure
    fields:
      screens:
        type: array
        min-length: 1
        max-length: 1000
        value-type:
          type: reference
          ref: screen-matcher
