---

name: petronia_core.hotkey_binding
type: impl
version: [1, 0, 0]
about: Simple hotkey binding extension.
description: >
  Simple hotkey bindings.
licenses:
  - MIT
authors:
  - Petronia Project

implements:
  - name: petronia.core.api.hotkey_binding
    minimum: [1, 0, 0]
    below: [2, 0, 0]
depends:
  - name: petronia.core.api.datastore
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.prototype.logging
    minimum: [1, 0, 0]
    below: [2, 0, 0]
  - name: petronia.core.api.native.hotkey
    minimum: [1, 0, 0]
    below: [2, 0, 0]

runtime:
  launcher: core
  # No permissions necessary


state-data:
  configuration:
    description: >
      User configuration data.
    fields:
      bindings:
        type: reference
        ref: bound-keys


references:
  # ------------------------------
  # Standard Types ...
  event-target-id:
    description: ID of an event listener.
    type: string
    min-length: 5
    max-length: 600

  # -------------------------------------------
  # Local structures
  bound-keys:
    description: >
      All the bound key sequences and their triggered event data.
    type: structure
    fields:
      sequence_type:
        description: >
          The kind of key pressing that this master sequence describes.  "meta" means any order,
          usually used for meta-keys, like "shift", "alt", and "super". "sequence" means a
          series of keys that must be pressed in that order.
        type: reference
        ref: sequence-type
      master_sequence:
        description: The primary sequence of keys that begins all hotkey sequences.
        type: reference
        ref: key-sequence
      bindings:
        description: List of all bound keys and their triggered events.
        type: array
        min-length: 0
        max-length: 2000
        value-type:
          type: reference
          ref: bound-hotkey

  sequence-type:
    description: >
      The kind of key pressing that this master sequence describes.  "meta" means any order,
      usually used for meta-keys, like "shift", "alt", and "super". "sequence" means a
      series of keys that must be pressed in that order.
    type: enum
    values:
      - sequence
      - meta

  single-key:
    description: The primary sequence of keys that begins all hotkey sequences.
    type: string
    min-length: 1
    max-length: 30

  comment:
    description: Additional descriptive information.
    type: string
    min-length: 0
    max-length: 2000

  key-sequence:
    description: >
      A list of key names that are pressed in sequence.
    type: array
    min-length: 1
    max-length: 30
    value-type:
      type: reference
      ref: single-key

  bound-event:
    description: >
      Generated event details that are sent when a bound key sequence is pressed.
    type: structure
    fields:
      target_id:
        description: >
          Event destination.  Should be an ID in the extension that handles this event.
        type: reference
        ref: event-target-id
      parameters:
        description: List of bound parameters that are sent with the event.
        type: array
        min-length: 0
        max-length: 100
        value-type:
          type: reference
          ref: bound-event-parameter

  bound-event-parameter:
    description: >
      A single parameter value sent with a triggered bound hotkey event.
    type: structure
    fields:
      key:
        description: parameter name
        type: string
        min-length: 1
        max-length: 100
      value:
        description: parameter value
        type: string
        min-length: 0
        max-length: 2000

  bound-hotkey:
    description: >
      A single hotkey sequence bound to an event.
    type: structure
    fields:
      keys:
        description: The key sequence, without the master sequence, for this hotkey.
        type: reference
        ref: key-sequence
      event:
        description: The event triggered when the key sequence is pressed.
        type: reference
        ref: bound-event
      comment:
        description: >
          A user-defined comment to aid in remembering what this key is for.
        optional: true
        type: reference
        ref: comment
